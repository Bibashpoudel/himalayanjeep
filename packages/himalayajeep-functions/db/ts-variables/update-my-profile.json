{
  "createdAt": 1669723227351,
  "updatedAt": 1669723227351,
  "deletedAt": 0,
  "createdFirstAt": 1669723227351,
  "classification": "const",
  "comments": [],
  "isExported": true,
  "name": "updateMyProfile",
  "slug": "update-my-profile",
  "operationRelativeTypescriptFilePath": "src/updateMyProfile.ts",
  "type": {
    "rawType": "(loginToken: string, myJeep: Omit<import(\"/Users/bibashpoudel/Desktop/newtype/typerepo/packages/himalayajeep-types/build/types\").MyJeepType, \"id\" | \"createdAt\" | \"updatedAt\" | keyof import(\"/Users/bibashpoudel/Desktop/newtype/typerepo/packages/himalayajeep-types/build/types\").MyJeepAdminTypes>) => Promise<{ isSuccesful: boolean; message: string; }>",
    "typeDefinition": {
      "type": "object",
      "properties": {},
      "optional": false
    },
    "typeCoverage": 0,
    "isArray": false,
    "isEnum": false,
    "isObject": true,
    "isPrimitive": false,
    "isEnumLiteral": false,
    "simplifiedSchema": {
      "properties": [],
      "type": "object"
    }
  },
  "value": "async (\n  loginToken: string,\n  myJeep: Omit<\n    MyJeepType,\n    \"id\" | \"createdAt\" | \"updatedAt\" | keyof MyJeepAdminTypes\n  >\n): Promise<{\n  isSuccesful: boolean;\n  message: string;\n}> => {\n  const jeeps = await db.get(\"JeepType\");\n  const jeep = jeeps.find((x) => x.loginToken === loginToken);\n\n  if (!jeep) {\n    return {\n      isSuccesful: false,\n      message: \"Can't find that jeep\",\n    };\n  }\n\n  const { isSuccesful, message } = await db.update(\n    \"JeepType\",\n    (item) => item.id === jeep.id,\n    (old) => {\n      const newJeep: JeepType = { ...old, ...myJeep };\n      return newJeep;\n    }\n  );\n\n  return {\n    isSuccesful: isSuccesful || false,\n    message: isSuccesful\n      ? \"You've updated your profile\"\n      : message || \"Something went wrong\",\n  };\n}",
  "description": "",
  "id": "jjjfiedhczhirabhkrdzckhm"
}